#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LANGUAGE_1 Q  &kp W         &kp E         &kp R        &kp T                                                         &kp Y             &kp U     &lt 4 I    &kp O    &kp P
&mt LANGUAGE_2 A  &kp S         &kp D         &kp F        &kp G        &kp LS(LG(S))               &kp LS(N8)           &kp H             &mt F2 J  &kp K      &kp L    &mt SEMICOLON ENTER
&mt LEFT_SHIFT Z  &mt LC(X) X   &mt LC(C) C   &mt LC(V) V  &kp B        &kp SQT                     &kp LS(N9)           &kp N             &kp M     &kp COMMA  &kp DOT  &kp LS(MINUS)
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp TAB      &lt 4 MINUS  &lt_to_layer_0 2 SPACE      &lt 3 LC(LA(SPACE))  &lt 1 INT_HENKAN                                &to 4
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp LANGUAGE_1  &kp LS(N7)        &kp LS(N8)        &kp LS(N9)        &trans                      &kp RIGHT_BRACE    &kp PIPE        &trans            &trans  &kp BACKSPACE
&kp LANGUAGE_2  &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &trans  &trans      &trans  &kp RIGHT_BRACKET  &kp BACKSLASH   &kp LEFT_BRACKET  &trans  &kp ENTER
&trans          &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &trans  &trans      &trans  &kp LS(COMMA)      &kp LS(PERIOD)  &kp QUESTION      &trans  &trans
&trans          &trans            &trans            &trans            &trans  &trans      &trans  &trans                                                       &trans
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LS(SEMICOLON)                                          &trans  &kp F7  &kp F8  &kp F9  &kp F10
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp LS(SINGLE_QUOTE)  &kp LC(LA(KP_NUMBER_0))      &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD            &kp UNDERSCORE               &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12
&trans                      &trans           &trans           &trans           &trans                &trans                       &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans          &trans          &trans           &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &kp LA(F4)           &kp F2     &kp LC(C)        &kp LC(V)    &kp LG(V)
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans               &mkp MB1   &mkp MB3         &mkp MB2     &lt 5 INSERT
&trans  &trans  &trans  &trans  &trans  &kp LG(H)      &trans  &trans               &kp LG(Z)  &kp LC(LS(TAB))  &kp LC(TAB)  &kp ENTER
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &lt 1 LC(LA(SPACE))                                           &to 0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
